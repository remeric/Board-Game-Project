trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
# - stage: Build
#   displayName: Build image
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: ubuntu-latest
#     steps:
#     - task: Docker@2
#       displayName: Build an image
#       inputs:
#         containerRegistry: 'DockerHubRemeric'
#         repository: 'remeric/board-game-selector'
#         command: 'buildAndPush'
#         Dockerfile: '**/app/Dockerfile'
#         tags: '$(tag)'

- stage: Deploy
  displayName: Deploy image
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'Ubuntu-latest'
    steps: 
      - task: DownloadSecureFile@1
        name: publickey
        inputs:
          secureFile: 'default-ec2.pem'
      # - task: Bash@3
      #   inputs:
      #     targetType: 'inline'
      #     script: |
      #       export AWS_ACCESS_KEY_ID=$(client_id)
      #       export AWS_SECRET_ACCESS_KEY=$(client_secret)
      #       export AWS_DEFAULT_REGION=us-east-1
      #       env
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            #!/bin/bash
            #For verifying and troubleshooting environment variables for AWS login


            echo show current directory
            pwd

            echo show environment variables dont exit
            printenv AWS_ACCESS_KEY_ID
            printenv AWS_SECRET_ACCESS_KEY
            printenv AWS_DEFAULT_REGION

            echo add anvironment variables
            echo AWS_ACCESS_KEY_ID=$(client_id) >> ~/.bashrc
            echo AWS_SECRET_ACCESS_KEY=$(client_secret) >> ~/.bashrc
            echo AWS_DEFAULT_REGION=us-east-1 >> ~/.bashrc
            source ~/.bashrc

            echo print environment variables
            printenv AWS_ACCESS_KEY_ID
            printenv AWS_SECRET_ACCESS_KEY
            printenv AWS_DEFAULT_REGION

            echo show bashrc file
            cat ~/.bashrc

            echo print all environment variables
            env
          noRc: false
      #   inputs:
      #     command: 'init'
      #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/aws-ecs'
      #     commandOptions: '-backend-config="access_key=$(client_id)" -backend-config="secret_key=$(client_secret)" '
      #     backendType: 'selfConfigured'
      #     allowTelemetryCollection: true
      # - task: TerraformCLI@0
      #   inputs:
      #     command: 'apply'
      #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/aws-ecs'
      #     commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var application_version=92'
      #     allowTelemetryCollection: true
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            #!/bin/bash
            #Verifying global environmental variables are still here
            echo print environment variables
            # printenv AWS_ACCESS_KEY_ID
            # printenv AWS_SECRET_ACCESS_KEY
            # printenv AWS_DEFAULT_REGION
            env

# -var ssh_public_key=$(publickey.securefilepath) 


