trigger:
- main/app

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  AWS_ACCESS_KEY_ID: $(client_id)
  AWS_SECRET_ACCESS_KEY: $(client_secret)
  AWS_DEFAULT_REGION: 'us-east-1'
  # MY_SECRET : $(secret_key)

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'DockerHubRemeric'
        repository: 'remeric/board-game-selector'
        command: 'buildAndPush'
        Dockerfile: '**/app/Dockerfile'
        tags: '$(tag)'

- stage: Update
  displayName: Update
  jobs:
  - job: Update
    displayName: Update Terraform Task
    pool:
      vmImage: 'Ubuntu-latest'
    steps: 
      # - task: DownloadSecureFile@1
      #   name: publickey
      #   inputs:
      #     secureFile: 'default-ec2.pem'
      # - task: Bash@3
      #   inputs:
      #     targetType: 'inline'
      #     script: |
      #       #!/bin/bash
      #       #Verifying global environmental are working
      #       echo print environment variables
      #       printenv
      - task:  TerraformCLI@0  
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/aws-ecs'
          backendType: 'selfConfigured'
          allowTelemetryCollection: true
      - task: TerraformCLI@0
        inputs:
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/aws-ecs'
          commandOptions: '-var application_version=$(tag)'
          allowTelemetryCollection: true
        
- stage: Deploy
  displayName: Deploy Container in ECS
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      # - task: Bash@3
      #   inputs:
      #     targetType: 'inline'
      #     script: |
      #       apt update
      #       apt install curl
      #       apt install unzip
      #       curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #       unzip awscliv2.zip
      #       sudo ./aws/install --update
      - task: AWSCLI@1
        inputs:
          awsCredentials: 'aws_cl_user'
          regionName: 'us-east-1'
          awsCommand: 'ecs'
          awsSubCommand: 'update-service'
          awsArguments: '--cluster BGapp_ECS_cluster --service BGapp_ecs_service --force-new-deployment'
          

#Notes
#public key variable if needed:  $(publickey.securefilepath)